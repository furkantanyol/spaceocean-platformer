{"version":3,"sources":["platformer/characters/Hero.ts","platformer/characters/Spider.ts","platformer/scenes/playScene.ts","platformer/config.ts","platformer/helpers.ts","platformer/Game.tsx","platformer/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Hero","params","scene","x","y","key","frame","sprite","body","currentScene","isFrozen","isAlive","SPEED","JUMP_SPEED","BOUNCE_SPEED","physics","add","existing","world","enable","setCollideWorldBounds","setFlipX","setOrigin","setOffset","events","on","update","anim","this","destroy","createAnims","cursors","left","isDown","moveLeft","right","moveRight","stand","up","jump","velocity","anims","play","setVelocityX","flipX","touching","down","canJump","setVelocityY","sfx","create","frames","generateFrameNumbers","frameRate","repeat","Phaser","GameObjects","Sprite","Spider","blocked","Physics","Arcade","PlayScene","coinPickupCount","hasKey","level","coinFont","keyIcon","hud","platforms","enemyWalls","bgDecorations","door","ship","coins","hero","spiders","data","input","keyboard","createCursorKeys","cameras","main","setRoundPixels","load","image","spritesheet","frameWidth","frameHeight","loadSpritesheets","audio","loadAudio","json","loadLevels","flash","setScale","loadLevel","cache","get","sound","coin","stomp","bgm","setLoop","createHud","handleCollisions","text","setFrame","group","decoration","forEach","deco","platform","spawnPlatform","spawnCoin","spawnShip","spawnDoor","spawnKey","spawnCharacters","platformSprite","allowGravity","immovable","spawnEnemyWall","width","side","wallSprite","setImmovable","setAllowGravity","visible","coinSprite","tweens","targets","ease","duration","yoyo","spider","spiderSprite","retroFontConfig","height","chars","charsPerRow","lineSpacing","bitmapFont","RetroFont","Parse","make","MARGIN","coinIcon","bitmapText","collider","overlap","onHeroVsCoin","onHeroVsEnemy","onHeroVsKey","onHeroVsDoor","_","killAndHide","enemy","bounce","die","restart","freeze","alpha","autoStart","onComplete","fade","stop","Scene","IGame","config","type","AUTO","parent","default","arcade","gravity","debug","Game","id","React","Component","Platformer","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5816ba79.chunk.js","sourcesContent":["import Phaser from \"phaser\";\nimport PlayScene from \"../scenes/playScene\";\n\nclass Hero extends Phaser.GameObjects.Sprite {\n  public sprite: Phaser.Physics.Arcade.Sprite;\n  public body: Phaser.Physics.Arcade.Body;\n  private currentScene: PlayScene;\n  private isFrozen: Boolean = false;\n  private isAlive: Boolean = true;\n\n  SPEED = 200;\n  JUMP_SPEED = 600;\n  BOUNCE_SPEED = 200;\n\n  constructor(params) {\n    super(params.scene, params.x, params.y, params.key, params.frame);\n\n    this.currentScene = params.scene;\n\n    this.currentScene.physics.add.existing(this);\n    this.currentScene.physics.world.enable(this);\n    this.currentScene.add.existing(this);\n    this.body.setCollideWorldBounds(true);\n\n    this.setFlipX(false);\n    this.setOrigin(0, 0.5);\n    this.body.setOffset(3, 10);\n\n    this.currentScene.events.on(\"update\", () => {\n      this.body && this.update();\n    });\n\n    this.on(\n      \"animationcomplete\",\n      function(anim) {\n        if (anim.key === \"die\") {\n          this.destroy();\n        }\n      },\n      this\n    );\n\n    this.createAnims(this.currentScene);\n  }\n\n  update(): void {\n    if (this.currentScene.cursors.left.isDown) {\n      this.moveLeft();\n    } else if (this.currentScene.cursors.right.isDown) {\n      this.moveRight();\n    } else {\n      this.stand();\n    }\n\n    if (this.currentScene.cursors.up.isDown) {\n      this.jump();\n    }\n\n    const falling = this.body.velocity.y > 0;\n    if (falling) {\n      this.anims.play(\"fall\", true);\n    }\n  }\n\n  moveLeft(): void {\n    if (this.isFrozen) return;\n\n    this.body.setVelocityX(-this.SPEED); // move left\n\n    const isRunning = this.body.velocity.x !== 0 && this.body.velocity.y === 0;\n\n    if (isRunning) {\n      this.anims.play(\"run\", true);\n    }\n\n    this.flipX = true; // flip the sprite to the left\n  }\n\n  moveRight(): void {\n    if (this.isFrozen) return;\n\n    this.body.setVelocityX(this.SPEED); // move right\n\n    const isRunning = this.body.velocity.x !== 0 && this.body.velocity.y === 0;\n\n    if (isRunning) {\n      this.anims.play(\"run\", true);\n    }\n\n    this.flipX = false; // use the original sprite looking to the right\n  }\n\n  stand(): void {\n    this.body.setVelocityX(0);\n\n    const isStanding =\n      this.body.velocity.x === 0 &&\n      this.body.velocity.y === 0 &&\n      this.body.touching.down;\n\n    if (isStanding) {\n      this.anims.play(\"stop\", true);\n    }\n  }\n\n  jump() {\n    const canJump = this.body.touching.down && this.isAlive && !this.isFrozen;\n\n    if (canJump) {\n      this.body.setVelocityY(-this.JUMP_SPEED);\n      this.anims.play(\"jump\", true);\n      this.currentScene.sfx.jump.play();\n    }\n\n    return canJump;\n  }\n\n  bounce() {\n    this.body.setVelocityY(-this.BOUNCE_SPEED);\n  }\n\n  freeze() {\n    this.body.enable = false;\n    this.anims.play(\"stop\", true);\n    this.isFrozen = true;\n  }\n\n  die() {\n    this.isAlive = false;\n    this.body.enable = false;\n\n    this.anims.play(\"die\");\n  }\n\n  private createAnims(scene: PlayScene) {\n    scene.anims.create({\n      key: \"stop\",\n      frames: scene.anims.generateFrameNumbers(\"hero\", {\n        frames: [0]\n      })\n    });\n    scene.anims.create({\n      key: \"run\",\n      frames: scene.anims.generateFrameNumbers(\"hero\", {\n        frames: [1, 2]\n      }),\n      frameRate: 8,\n      repeat: -1\n    });\n    scene.anims.create({\n      key: \"jump\",\n      frames: scene.anims.generateFrameNumbers(\"hero\", {\n        frames: [3]\n      })\n    });\n\n    scene.anims.create({\n      key: \"fall\",\n      frames: scene.anims.generateFrameNumbers(\"hero\", {\n        frames: [4]\n      })\n    });\n  }\n}\n\nexport default Hero;\n","import Phaser from \"phaser\";\n\nclass Spider extends Phaser.Physics.Arcade.Sprite {\n  public sprite: Phaser.Physics.Arcade.Sprite;\n  private currentScene: Phaser.Scene;\n\n  SPEED = 100;\n\n  constructor(params) {\n    super(params.scene, params.x, params.y, params.key, params.frame);\n    this.currentScene = params.scene;\n    this.setOrigin(0.5);\n\n    this.scene.add.existing(this);\n    this.scene.physics.add.existing(this);\n    this.scene.physics.world.enable(this);\n    this.setCollideWorldBounds(true);\n    this.setVelocityX(this.SPEED);\n    this.scene.events.on(\"update\", () => {\n      this.body && this.update();\n    });\n    this.on(\n      \"animationcomplete\",\n      function(anim) {\n        if (anim.key === \"die\") {\n          this.destroy();\n        }\n      },\n      this\n    );\n    this.createAnims(this.currentScene);\n    this.anims.play(\"crawl\", true);\n  }\n\n  update() {\n    // check against walls and reverse direction if necessary\n    if (this.body.touching.right || this.body.blocked.right) {\n      this.setVelocityX(-this.SPEED); // turn left\n    } else if (this.body.touching.left || this.body.blocked.left) {\n      this.setVelocityX(this.SPEED); // turn right\n    }\n  }\n\n  die() {\n    this.body.enable = false;\n\n    this.scene.anims.play(\"die\", this);\n  }\n\n  private createAnims(scene) {\n    scene.anims.create({\n      key: \"crawl\",\n      frames: scene.anims.generateFrameNumbers(\"spider\", {\n        frames: [0, 1, 2]\n      }),\n      frameRate: 8,\n      repeat: -1\n    });\n    scene.anims.create({\n      key: \"die\",\n      frames: scene.anims.generateFrameNumbers(\"spider\", {\n        frames: [0, 4, 0, 4, 0, 4, 3, 3, 3, 3, 3, 3]\n      }),\n      frameRate: 12\n    });\n  }\n}\n\nexport default Spider;\n","import { LEVEL_COUNT, NUMBERS_STR, MARGIN } from \"../config\"\nimport { Scene } from \"phaser\"\nimport {\n  loadImages,\n  loadSpritesheets,\n  loadAudio,\n  loadLevels,\n  createSfx,\n} from \"../helpers\"\nimport Hero from \"../characters/Hero\"\nimport Spider from \"../characters/Spider\"\n\nclass PlayScene extends Scene {\n  cursors = null\n  coinPickupCount = null\n  hasKey = null\n  level = null\n  sfx = null\n  coinFont = null\n  keyIcon = null\n  hud = null\n\n  platforms = null\n  enemyWalls = null\n  bgDecorations = null\n  door = null\n  ship = null\n\n  coins = null\n  hero: Hero = null\n  spiders = null\n  key = null\n\n  constructor() {\n    super(\"PlayScene\")\n  }\n\n  init(data) {\n    this.cursors = this.input.keyboard.createCursorKeys()\n\n    this.coinPickupCount = 0\n    this.hasKey = false\n    this.level = (data.level || 0) % LEVEL_COUNT\n\n    this.cameras.main.setRoundPixels(true)\n  }\n\n  preload() {\n    loadImages(this)\n    loadSpritesheets(this)\n    loadAudio(this)\n    loadLevels(this)\n  }\n\n  create() {\n    this.cameras.main.flash()\n\n    this.add\n      .image(0, 0, \"background\")\n      .setOrigin(0)\n      .setScale(1.2)\n\n    this.loadLevel(this.cache.json.get(`level:${this.level}`))\n\n    this.sfx = createSfx(this)\n    this.sfx.bgm.setLoop(true)\n    this.sfx.bgm.play()\n\n    this.createHud()\n  }\n\n  update() {\n    this.handleCollisions()\n    this.coinFont.text = `x${this.coinPickupCount}`\n    this.keyIcon.setFrame(this.hasKey ? 1 : 0)\n  }\n\n  private loadLevel(data) {\n    this.platforms = this.add.group()\n    this.enemyWalls = this.add.group()\n    this.bgDecorations = this.add.group()\n\n    this.coins = this.add.group()\n    this.spiders = this.add.group()\n\n    data.decoration.forEach(deco => {\n      this.bgDecorations.add(\n        this.add.image(deco.x, deco.y, \"decoration\", deco.frame).setOrigin(0, 0)\n      )\n    })\n    data.platforms.forEach(platform => this.spawnPlatform(platform))\n    data.coins.forEach(coin => this.spawnCoin(coin))\n\n    this.spawnShip(data.ship.x, data.ship.y)\n    this.spawnDoor(data.ship.x, data.door.y)\n    this.spawnKey(data.key.x, data.key.y)\n    this.spawnCharacters({ hero: data.hero, spiders: data.spiders })\n  }\n\n  private spawnPlatform(platform) {\n    const platformSprite = this.platforms\n      .create(platform.x, platform.y, platform.image)\n      .setOrigin(0, 0)\n    this.physics.world.enable(platformSprite)\n    platformSprite.body.allowGravity = false\n    platformSprite.body.immovable = true\n\n    this.spawnEnemyWall(platform.x, platform.y, \"left\")\n    this.spawnEnemyWall(platform.x + platformSprite.width, platform.y, \"right\")\n  }\n\n  private spawnEnemyWall(x, y, side) {\n    const wallSprite = this.enemyWalls\n      .create(x, y, \"invisible-wall\")\n      .setOrigin(side === \"left\" ? 1 : 0, 1)\n\n    this.physics.world.enable(wallSprite)\n    wallSprite.body.setImmovable(true)\n    wallSprite.body.setAllowGravity(false)\n    wallSprite.visible = false\n  }\n\n  private spawnCoin(coin) {\n    let coinSprite = this.coins\n      .create(coin.x, coin.y, \"coin\")\n      .setOrigin(0.5, 0.75)\n\n    this.anims.create({\n      key: \"rotate\",\n      frames: this.anims.generateFrameNumbers(\"coin\", {\n        frames: [0, 1, 2, 1],\n      }),\n      frameRate: 6,\n      repeat: -1,\n    })\n\n    this.anims.play(\"rotate\", coinSprite)\n    // disable gravity on coins\n    this.physics.world.enable(coinSprite)\n    coinSprite.body.setAllowGravity(false)\n  }\n\n  private spawnDoor(x, y) {\n    this.door = this.bgDecorations.create(x, y, \"door\").setOrigin(0.5, 1)\n    this.physics.world.enable(this.door)\n    this.door.body.setAllowGravity(false)\n  }\n\n  private spawnShip(x, y) {\n    this.ship = this.bgDecorations.create(x, y, \"ship\").setOrigin(0.5, 1)\n  }\n\n  private spawnKey(x, y) {\n    this.key = this.bgDecorations.create(x, y, \"key\").setOrigin(0.5, 0.5)\n    this.physics.world.enable(this.key)\n    this.key.body.setAllowGravity(false)\n    this.key.y -= 3\n\n    this.tweens.add({\n      targets: this.key,\n      y: this.key.y + 6,\n      ease: \"Sine.easeInOut\",\n      duration: 800,\n      yoyo: true,\n      repeat: -1,\n    })\n  }\n\n  private spawnCharacters(data) {\n    this.hero = new Hero({\n      scene: this,\n      x: data.hero.x,\n      y: data.hero.y,\n    })\n\n    data.spiders.forEach(spider => {\n      const spiderSprite = new Spider({ scene: this, x: spider.x, y: spider.y })\n      this.spiders.add(spiderSprite)\n    })\n  }\n\n  private createHud() {\n    const retroFontConfig = {\n      image: \"font:numbers\",\n      width: 19,\n      height: 26,\n      chars: NUMBERS_STR,\n      charsPerRow: 10,\n      \"offset.x\": 0,\n      \"offset.y\": 0,\n      \"spacing.x\": 1,\n      \"spacing.y\": 1,\n      lineSpacing: 0,\n    }\n\n    this.cache.bitmapFont.add(\n      \"font:numbers\",\n      Phaser.GameObjects.RetroFont.Parse(this, retroFontConfig)\n    )\n\n    this.keyIcon = this.make\n      .image({\n        x: MARGIN,\n        y: MARGIN + 19,\n        key: \"icon:key\",\n      })\n      .setOrigin(0, 0.5)\n\n    let coinIcon = this.make\n      .image({\n        x: MARGIN + this.keyIcon.width + 7,\n        y: MARGIN,\n        key: \"icon:coin\",\n      })\n      .setOrigin(0, 0)\n\n    this.coinFont = this.add\n      .bitmapText(\n        MARGIN + coinIcon.x + coinIcon.width,\n        MARGIN + coinIcon.height / 2,\n        \"font:numbers\"\n      )\n      .setOrigin(0, 0.5)\n  }\n\n  private handleCollisions() {\n    this.physics.add.collider(this.hero, this.platforms)\n    this.physics.add.collider(this.spiders, this.platforms)\n    this.physics.add.collider(this.spiders, this.enemyWalls)\n\n    this.physics.add.overlap(\n      this.hero,\n      this.coins,\n      this.onHeroVsCoin,\n      null,\n      this\n    )\n    this.physics.add.overlap(\n      this.hero,\n      this.spiders,\n      this.onHeroVsEnemy,\n      null,\n      this\n    )\n    this.physics.add.overlap(this.hero, this.key, this.onHeroVsKey, null, this)\n    this.physics.add.overlap(\n      this.hero,\n      this.door,\n      this.onHeroVsDoor,\n      // ignore if there is no key or the player is on air\n      (hero: Hero, _) => {\n        return this.hasKey && hero.body.touching.down\n      },\n      this\n    )\n  }\n\n  private onHeroVsCoin(_, coin) {\n    this.sfx.coin.play()\n\n    this.coins.killAndHide(coin)\n    coin.body.enable = false\n\n    this.coinPickupCount++\n  }\n\n  private onHeroVsEnemy(hero, enemy) {\n    if (hero.body.velocity.y > 0) {\n      // kill enemies when hero is falling\n      hero.bounce()\n      enemy.die()\n      this.sfx.stomp.play()\n    } else {\n      // game over -> restart the game\n      this.sfx.stomp.play()\n      this.scene.restart()\n    }\n  }\n\n  private onHeroVsKey(_, key) {\n    this.sfx.key.play()\n    this.bgDecorations.killAndHide(key)\n    key.body.enable = false\n\n    this.hasKey = true\n    this.door.setFrame(1)\n  }\n\n  private onHeroVsDoor(hero, _) {\n    // door.setFrame(1)\n    this.sfx.door.play()\n    hero.freeze()\n\n    this.tweens.add({\n      targets: hero,\n      x: this.door.x,\n      alpha: 0,\n      duration: 500,\n      ease: null,\n      autoStart: true,\n      onComplete: () => {\n        this.cameras.main.fade(1000, 0, 0, 0, false, () => {\n          this.sfx.bgm.stop()\n          this.scene.restart({ level: this.level + 1 })\n        })\n      },\n    })\n  }\n}\n\nexport default PlayScene\n","export const GAME_HEIGHT = 620\nexport const GAME_WIDTH = 960\nexport const LEVEL_COUNT = 2\nexport const NUMBERS_STR = \"0123456789X \"\nexport const MARGIN = 10\nexport const GRAVITY = 1200\n","export const loadImages = function(scene) {\n  scene.load.image(\"background\", \"assets/phaser/images/background.png\")\n  scene.load.image(\"ground\", \"assets/phaser/images/ground.png\")\n  scene.load.image(\"grass:8x1\", \"assets/phaser/images/grass_8x1.png\")\n  scene.load.image(\"grass:6x1\", \"assets/phaser/images/grass_6x1.png\")\n  scene.load.image(\"grass:4x1\", \"assets/phaser/images/grass_4x1.png\")\n  scene.load.image(\"grass:2x1\", \"assets/phaser/images/grass_2x1.png\")\n  scene.load.image(\"grass:1x1\", \"assets/phaser/images/grass_1x1.png\")\n  scene.load.image(\"invisible-wall\", \"assets/phaser/images/invisible_wall.png\")\n  scene.load.image(\"icon:coin\", \"assets/phaser/images/coin_icon.png\")\n  scene.load.image(\"font:numbers\", \"assets/phaser/images/numbers.png\")\n  scene.load.image(\"key\", \"assets/phaser/images/key.png\")\n  scene.load.image(\"ship\", \"assets/phaser/images/ship.png\")\n}\n\nexport const loadSpritesheets = function(scene) {\n  scene.load.spritesheet(\"coin\", \"assets/phaser/images/coin_animated.png\", {\n    frameWidth: 22,\n    frameHeight: 22,\n  })\n  scene.load.spritesheet(\"spider\", \"assets/phaser/images/spider.png\", {\n    frameWidth: 42,\n    frameHeight: 32,\n  })\n  scene.load.spritesheet(\"hero\", \"assets/phaser/images/hero.png\", {\n    frameWidth: 35,\n    frameHeight: 42,\n  })\n  scene.load.spritesheet(\"door\", \"assets/phaser/images/door.png\", {\n    frameWidth: 29,\n    frameHeight: 45,\n  })\n  scene.load.spritesheet(\"icon:key\", \"assets/phaser/images/key_icon.png\", {\n    frameWidth: 34,\n    frameHeight: 30,\n  })\n  scene.load.spritesheet(\"decoration\", \"assets/phaser/images/decor.png\", {\n    frameWidth: 42,\n    frameHeight: 42,\n  })\n}\n\nexport const loadAudio = function(scene) {\n  scene.load.audio(\"sfx:jump\", \"assets/phaser/audio/jump.wav\")\n  scene.load.audio(\"sfx:coin\", \"assets/phaser/audio/coin.wav\")\n  scene.load.audio(\"sfx:stomp\", \"assets/phaser/audio/stomp.wav\")\n  scene.load.audio(\"sfx:key\", \"assets/phaser/audio/key.wav\")\n  scene.load.audio(\"sfx:door\", \"assets/phaser/audio/door.wav\")\n  scene.load.audio(\"bgm\", [\n    \"assets/phaser/audio/bgm.mp3\",\n    \"assets/phaser/audio/bgm.ogg\",\n  ])\n}\n\nexport const loadLevels = function(scene) {\n  scene.load.json(\"level:0\", \"assets/phaser/data/level00.json\")\n  scene.load.json(\"level:1\", \"assets/phaser/data/level01.json\")\n}\n\nexport const createSfx = function(scene) {\n  const sfx = {\n    key: scene.sound.add(\"sfx:key\"),\n    door: scene.sound.add(\"sfx:door\"),\n    jump: scene.sound.add(\"sfx:jump\"),\n    coin: scene.sound.add(\"sfx:coin\"),\n    stomp: scene.sound.add(\"sfx:stomp\"),\n    bgm: scene.sound.add(\"bgm\"),\n  }\n\n  return sfx\n}\n","import React from \"react\";\nimport Phaser from \"phaser\";\nimport PlayScene from \"./scenes/playScene\";\n\nimport { GAME_HEIGHT, GAME_WIDTH, GRAVITY } from \"./config\";\n\nexport interface IGameProps {}\n\nexport default class IGame extends React.Component<IGameProps, any> {\n  componentDidMount() {\n    const config: GameConfig = {\n      type: Phaser.AUTO,\n      width: GAME_WIDTH,\n      height: GAME_HEIGHT,\n      parent: \"phaser-game\",\n      scene: [PlayScene],\n      physics: {\n        default: \"arcade\",\n        arcade: {\n          gravity: { y: GRAVITY },\n          debug: false\n        }\n      }\n    };\n\n    new Phaser.Game(config);\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  public render() {\n    return <div id=\"phaser-game\" />;\n  }\n}\n","import React from \"react\";\nimport Game from \"./Game\";\n\ninterface PlatformerProps {}\n\nconst Platformer: React.FC<PlatformerProps> = () => {\n  return <Game />;\n};\n\nexport default Platformer;\n","import React from \"react\";\nimport \"./App.css\";\nimport PlatformerGame from \"./platformer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"retro-header\">SpaceOcean</h1>\n      <PlatformerGame />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}